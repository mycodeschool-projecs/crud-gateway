spring:
  cloud:
    compatibility-verifier:
      enabled: false
    gateway:
      routes:
        - id:  kube-land
          uri: http://localhost:8082
          predicates:
            - Path=/**
          filters:
            - RewritePath=/(?<segment>.*), /api/v1/$\{segment}
        - id: kube-ms1
          uri: http://localhost:8081
          predicates:
            - Path=/client/**
          filters:
            - RewritePath=/(?<segment>.*), /api/v1/$\{segment}
        - id: ui
          uri: http://localhost:3000
          predicates:
            - Path=/**
          filters:
            - RewritePath=/(?<segment>.*), /${segment}
        - id: ui-js-assets
          uri: http://localhost:3000
          predicates:
            - Path=/static/js/**
          filters:
            - RewritePath=/static/js/(?<filename>.*), /static/js/${filename}
      globalcors:
        corsConfigurations:
          '[/**]':
            allowed-origins: "http://localhost:5000"  # Updated to reflect the gateway's address if served through the gateway.
            allowed-methods: "GET, POST, PUT, DELETE, OPTIONS"
            allowed-headers: "Authorization, Content-Type, Accept"
            allow-credentials: true
            max-age: 1800 # 30 minutes
  application:
    name: gateway
  zipkin:
    base-url: http://localhost:9411/
    collector:
      host: localhost

  sleuth:
    sampler:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true

server:
  port: 5000


management:
  endpoint:
    health:
      show-details: ALWAYS
  endpoints:
    web:
      exposure:
        include: "*"

  tracing:
    sampling:
      probability: 1.0 # only for testing purpose, switch back to 0.1 for production code
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans



logging:
  level:
    org.springframework.web.cors: DEBUG
    org.springframework.cloud.gateway: DEBUG
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
    root: debug
  file:
    name: gateway.log

metrics:
  distribution:
    percentiles-histogram:
      http:
        server:
          requests: true